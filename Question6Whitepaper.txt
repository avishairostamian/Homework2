Avishai Rostamian
Professor Fried
Question 6 Whitepaper
5/03/21

	This program takes in a file and outputs each word in reverse using a stack. I quite enjoyed creating this program as it was refreshing working with a real life comical example. Starting from the main I opened a file containing 100 lines of text and converted each line into a string. I then iterated the line word by word checking for a space or period. I then took that word and threw it into my reverse function. The reverse function takes in a string in the form of a char array and stores each character of the array in a stack. The function then reads the top of the stack and removes the top element giving access to the next element. This was done until the stack was empty. The program then did this continuously within a while loop until the file was empty. The biggest challenge I endured was using the same char array for different words and having to clear it. After trying many different methods such as creating a dynamic char array and deleting it and initializing over and over until I stumbled upon the memset function. The memset function word keeps the char array intact while clearing all its contents for its use of the next word. The program as well uses many counters making sure the same word or line does not get read twice. Additionally, it was nice using a stack for this program as a stack is in the format of first in last out meaning that each word was reversed by nature of a stack. When working on this program I kept thinking how much easier this would be on Java but after realizing how convenient the features of a stack are I realized itâ€™s just as efficient on C++.
